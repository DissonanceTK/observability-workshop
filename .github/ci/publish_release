#!/usr/bin/env bash

set -o errexit  # Exit on most errors
set -o errtrace # Make sure any error trap is inherited
set -o nounset  # Disallow expansion of unset variables
set -o pipefail # Use last non-zero exit code in a pipeline

TAG_NAME=dev

while getopts 't:' opt; do
  case "$opt" in
    t)
      TAG_NAME=${OPTARG}
      ;;
    *)
      echo 'Usage: publish_release -t name' >&2
      echo '  -t    tag name without the "v" prefix' >&2
      exit 1
  esac
done

publish_dir="$(pwd)/site/v${TAG_NAME}"
remote=https://github.com/${GITHUB_REPOSITORY}.git
push_remote=https://${GITHUB_ACTOR}:${TOKEN}@github.com/${GITHUB_REPOSITORY}.git
commit_message="Docs: Releasing ${TAG_NAME}"
prep_dir=$(mktemp -d)

version_filter=$(yq '.params.versions[] | select (.version != "latest") | [ "! /^" + .version + "\//" ]' config.yaml | yq 'join(" && ")')

git clone --depth=1 --single-branch --branch gh-pages "${remote}" "${prep_dir}"
cd "${prep_dir}"
git config user.name "${GITHUB_ACTOR}"
git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

rm -f latest || true
[[ ! -f "${publish_dir}/index.html" ]] && { echo "${publish_dir} is missing index.html." >&2; exit 1; }
rsync -a "${publish_dir}" "${prep_dir}"
ln -s "v${TAG_NAME}" latest

git add --all "v${TAG_NAME}"
git add latest

# remove old versions
git ls-files | awk "${version_filter} && ! /^(latest|\.nojekyll|index\.html)/" | parallel --xargs -j1 git rm "{}"
git commit -m "${commit_message}"

git remote rm origin || true
git remote add origin "${push_remote}"
git push origin gh-pages
