# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------
# WARNING: This file is autogenerated. Do not manually edit.
# ----------------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: mysql:5
          name: mysql
          env:
            # Use secret in real usage
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: "LxvGChW075"
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-persistent-storage
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  initdb.sql: |
    CREATE DATABASE IF NOT EXISTS LxvGChW075;
    USE LxvGChW075;
    CREATE TABLE friends (id INT, name VARCHAR(256), age INT, gender VARCHAR(3));
    INSERT INTO friends VALUES (1, 'John Smith', 32, 'm');
    INSERT INTO friends VALUES (2, 'Lilian Worksmith', 29, 'f');
    INSERT INTO friends VALUES (3, 'Michael Rupert', 27, 'm');
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-datastore
spec:
  type: ClusterIP
  selector:
    app: mysql-datastore
  ports:
  - name: mysql
    port: 3306
    targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cart
spec:
  selector:
    matchLabels:
      app: redis-cart
  template:
    metadata:
      labels:
        app: redis-cart
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
        readinessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        livenessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
        resources:
          limits:
            memory: 256Mi
            cpu: 80m
          requests:
            cpu: 70m
            memory: 200Mi
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cart
spec:
  type: ClusterIP
  selector:
    app: redis-cart
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
spec:
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: recommendationservice
        image: quay.io/signalfuse/microservices-demo-recommendationservice:4bf3dfd4f0
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: SIGNALFX_ENDPOINT_URL
          value: "http://$(NODE_IP):9411/api/v2/spans"
        resources:
          requests:
            cpu: 100m
            memory: 220Mi
          limits:
            cpu: 120m
            memory: 250Mi
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
spec:
  type: ClusterIP
  selector:
    app: recommendationservice
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice
spec:
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        app: productcatalogservice
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: productcatalogservice
        image: quay.io/signalfuse/microservices-demo-productcatalogservice:4bf3dfd4f0
        imagePullPolicy: Always
        ports:
        - containerPort: 3550
        env:
        - name: PORT
          value: "3550"
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: SIGNALFX_ENDPOINT_URL
          value: "http://$(NODE_IP):9411/api/v2/spans"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:3550"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:3550"]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 120m
            memory: 125Mi
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
spec:
  type: ClusterIP
  selector:
    app: productcatalogservice
  ports:
  - name: grpc
    port: 3550
    targetPort: 3550
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
spec:
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        app: cartservice
    spec:
      terminationGracePeriodSeconds: 4
      containers:
      - name: cartservice
        image: quay.io/phagen/cartserviceprofiling:2.1.3
        imagePullPolicy: Always
        ports:
        - containerPort: 7070
        env:
        - name: REDIS_ADDR
          value: "redis-cart:6379"
        - name: PORT
          value: "7070"
        - name: LISTEN_ADDR
          value: "0.0.0.0"
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: SIGNALFX_ENDPOINT_URL
          value: "http://$(NODE_IP):9411/api/v2/spans"
        - name: SIGNALFX_METRICS_ENDPOINT_URL
          value: "http://$(NODE_IP):9943/v2/datapoint"
        - name: SIGNALFX_PROFILER_ENABLED
          value: "true"
        - name: SIGNALFX_PROFILER_LOGS_ENDPOINT
          value: "http://$(NODE_IP):4318/v1/logs"
        - name: SIGNALFX_PROFILER_CALL_STACK_INTERVAL
          value: "1000"
        - name: SIGNALFX_RUNTIME_METRICS_ENABLED
          value: "true"
        - name: SIGNALFX_SERVICE_NAME
          value: "cartservice"
        - name: SIGNALFX_ENV
          valueFrom:
            secretKeyRef:
              name: workshop-secret
              key: env
        - name: EXTERNAL_DB_NAME
          value: "LxvGChW075"
        - name: EXTERNAL_DB_ACCESS_RATE
          value: "0.9"
        - name: EXTERNAL_DB_MAX_DURATION_MILLIS
          value: "750"
        - name: EXTERNAL_DB_ERROR_RATE
          value: "0.0"
        - name: FIX_EXCESSIVE_ALLOCATION
          value: "true"
        - name: FIX_SLOW_LEAK
          value: "true"
        - name: OPTIMIZE_CPU
          value: "true"
        - name: OPTIMIZE_BLOCKING
          value: "true"
        resources:
          requests:
            cpu: 200m
            memory: 100Mi
          limits:
            cpu: 300m
            memory: 158Mi
        readinessProbe:
          initialDelaySeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice
spec:
  type: ClusterIP
  selector:
    app: cartservice
  ports:
  - name: grpc
    port: 7070
    targetPort: 7070
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      terminationGracePeriodSeconds: 5
      containers:
        - name: adservice
          image: quay.io/phagen/adserviceprofiling:4.1
          imagePullPolicy: Always
          ports:
            - containerPort: 9555
          env:
            - name: PORT
              value: '9555'
            - name: OTEL_SERVICE_NAME
              value: adservice
            - name: OTEL_RESOURCE_ATTRIBUTES
              valueFrom:
                secretKeyRef:
                  name: workshop-secret
                  key: deployment
            - name:  OTEL_PROPAGATORS
              value: "b3multi"
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: SPLUNK_PROFILER_ENABLED
              value: "true"
            - name: SPLUNK_PROFILER_MEMORY_ENABLED
              value: "true"
            - name: SPLUNK_METRICS_ENABLED
              value: "true"
            - name:  SPLUNK_METRICS_ENDPOINT
              value: 'http://$(NODE_IP):9943'
            - name: ENABLE_COPYRIGHT_CERTIFICATION
              value: "false"
            - name: STOCK_PHOTO_MAX_FINGERPRINT_SIZE
              value:  '100'
            - name: OTEL_TRACE_EXPORTER
              value: otlp
            - name: OTEL_TRACES_SAMPLER
              value: "rules"
            - name: OTEL_TRACES_SAMPLER_ARG
              value: "drop=/grpc.health.v1.Health;fallback=parentbased_always_on"
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/opt/sfx/splunk-otel-javaagent-all.jar -Dsplunk.profiler.call.stack.interval=1000ms -Dsplunk.profiler.include.internal.stacks=false -Dsplunk.profiler.cpu.data.format=pprof-gzip-base64 -Xmx640m"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: 'http://$(NODE_IP):4317'
          resources:
            #requests:
              #cpu: 300m
              #memory: 780Mi
            limits:
              memory: 900Mi
          readinessProbe:
            initialDelaySeconds: 60
            periodSeconds: 25
            exec:
              command: ['/bin/grpc_health_probe', '-addr=:9555']
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 30
            exec:
              command: ['/bin/grpc_health_probe', '-addr=:9555']
---
apiVersion: v1
kind: Service
metadata:
  name: adservice
spec:
  type: ClusterIP
  selector:
    app: adservice
  ports:
    - name: grpc
      port: 9555
      targetPort: 9555
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice
spec:
  selector:
    matchLabels:
      app: paymentservice
      version: canary
  template:
    metadata:
      labels:
        app: paymentservice
        version: canary
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: paymentservice
        image: quay.io/signalfuse/microservices-demo-paymentservice:4bf3dfd4f0
        imagePullPolicy: Always
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: SIGNALFX_ENDPOINT_URL
          value: "http://$(NODE_IP):9411/api/v2/spans"
        - name: API_TOKEN_FAILURE_RATE
          value: "0.90"
        - name: SERIALIZATION_FAILURE_RATE
          value: "0.0"
        - name: SUCCESS_PAYMENT_SERVICE_DURATION_MILLIS
          value: "200"
        - name: ERROR_PAYMENT_SERVICE_DURATION_MILLIS
          value: "500"
#        readinessProbe:
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50051"]
#        livenessProbe:
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        resources:
          requests:
            cpu: 120m
            memory: 100Mi
          limits:
            cpu: 130m
            memory: 120Mi
---
apiVersion: v1
kind: Service
metadata:
  name: paymentservice
spec:
  type: ClusterIP
  selector:
    app: paymentservice
    version: canary
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice-stable
spec:
  selector:
    matchLabels:
      app: paymentservice
      version: stable
  template:
    metadata:
      labels:
        app: paymentservice
        version: stable
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: paymentservice-stable
        image: quay.io/signalfuse/microservices-demo-paymentservice:4bf3dfd4f0
        imagePullPolicy: Always
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: SIGNALFX_ENDPOINT_URL
          value: "http://$(NODE_IP):9411/api/v2/spans"
        - name: API_TOKEN_FAILURE_RATE
          value: "0.0"
        - name: SERIALIZATION_FAILURE_RATE
          value: "0.0"
        - name: SUCCESS_PAYMENT_SERVICE_DURATION_MILLIS
          value: "200"
        - name: ERROR_PAYMENT_SERVICE_DURATION_MILLIS
          value: "500"
#        readinessProbe:
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50051"]
#        livenessProbe:
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        resources:
          requests:
            cpu: 120m
            memory: 100Mi
          limits:
            cpu: 130m
            memory: 120Mi
---
apiVersion: v1
kind: Service
metadata:
  name: paymentservice-stable
spec:
  type: ClusterIP
  selector:
    app: paymentservice
    version: stable
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
spec:
  selector:
    matchLabels:
      app: loadgenerator
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      containers:
      - name: loadgenerator
        image: quay.io/signalfuse/microservices-demo-loadgenerator:4bf3dfd4f0
        ports:
        - containerPort: 8089
        env:
        - name: FRONTEND_ADDR
          value: "frontend:80"
        - name: USERS
          value: "10"
        resources:
          requests:
            cpu: 300m
            memory: 256Mi
          limits:
            cpu: 330m
            memory: 280Mi
---
apiVersion: v1
kind: Service
metadata:
  name: loadgenerator
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "3"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
    external-dns.alpha.kubernetes.io/hostname: demo-load.
spec:
  type: LoadBalancer
  selector:
    app: loadgenerator
  ports:
  - name: http
    port: 82
    targetPort: 8089
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice
spec:
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        app: shippingservice
    spec:
      containers:
      - name: shippingservice
        image: quay.io/signalfuse/microservices-demo-shippingservice:4bf3dfd4f0
        imagePullPolicy: Always
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: SIGNALFX_ENDPOINT_URL
          value: "http://$(NODE_IP):9411/api/v2/spans"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        resources:
          requests:
            cpu: 110m
            memory: 110Mi
          limits:
            cpu: 120m
            memory: 125Mi
---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
spec:
  type: ClusterIP
  selector:
    app: shippingservice
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: currencyservice
spec:
  selector:
    matchLabels:
      app: currencyservice
  template:
    metadata:
      labels:
        app: currencyservice
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: currencyservice
        image: quay.io/signalfuse/microservices-demo-currencyservice:4bf3dfd4f0
        imagePullPolicy: Always
        ports:
        - name: grpc
          containerPort: 7000
        env:
        - name: DISABLE_PROFILER
          value: "True"
        - name: PORT
          value: "7000"
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: SIGNALFX_ENDPOINT_URL
          value: "http://$(NODE_IP):9411/api/v2/spans"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
        resources:
          requests:
            cpu: 200m
            memory: 125Mi
          limits:
            cpu: 300m
            memory: 150Mi
---
apiVersion: v1
kind: Service
metadata:
  name: currencyservice
spec:
  type: ClusterIP
  selector:
    app: currencyservice
  ports:
  - name: grpc
    port: 7000
    targetPort: 7000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
spec:
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        app: checkoutservice
    spec:
      containers:
        - name: checkoutservice
          image: quay.io/signalfuse/microservices-demo-checkoutservice:4bf3dfd4f0
          #image: quay.io/signalfuse/microservices-demo-checkoutservice:a728a64c18
          #image: harnit/shopdemo-checkoutservice:1.1
          ports:
          - containerPort: 5050
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "productcatalogservice:3550"
          - name: SHIPPING_SERVICE_ADDR
            value: "shippingservice:50051"
          - name: PAYMENT_SERVICE_ADDR
            value: "paymentservice:50051"
          - name: PAYMENT_SERVICE_ADDR_STABLE
            value: "paymentservice-stable:50051"
          - name: EMAIL_SERVICE_ADDR
            value: "emailservice:5000"
          - name: CURRENCY_SERVICE_ADDR
            value: "currencyservice:7000"
          - name: CART_SERVICE_ADDR
            value: "cartservice:7070"
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: SIGNALFX_ENDPOINT_URL
            value: "http://$(NODE_IP):9411/api/v2/spans"
          - name: MAX_RETRY_ATTEMPTS
            value: "20"
          - name: RETRY_INITIAL_SLEEP_MILLIS
            value: "25"
          resources:
            requests:
              cpu: 110m
              memory: 110Mi
            limits:
              cpu: 120m
              memory: 125Mi
---
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
spec:
  type: ClusterIP
  selector:
    app: checkoutservice
  ports:
  - name: grpc
    port: 5050
    targetPort: 5050
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - name: frontend
          image: quay.io/phagen/frontend-rum-profile:3.1.0
          #image: docker.io/harnit/shopdemo-frontend:2.1-customevents
          ports:
          - containerPort: 8080
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-liveness-probe"
          env:
          - name: DISABLE_PROFILER
            value: "True"
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "productcatalogservice:3550"
          - name: CURRENCY_SERVICE_ADDR
            value: "currencyservice:7000"
          - name: CART_SERVICE_ADDR
            value: "cartservice:7070"
          - name: RECOMMENDATION_SERVICE_ADDR
            value: "recommendationservice:8080"
          - name: SHIPPING_SERVICE_ADDR
            value: "shippingservice:50051"
          - name: CHECKOUT_SERVICE_ADDR
            value: "checkoutservice:5050"
          - name: AD_SERVICE_ADDR
            value: "adservice:9555"
          - name: RUM_REALM
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: realm
          - name: RUM_AUTH
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: rum_token
          - name: RUM_APP_NAME
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: app
          - name: RUM_ENVIRONMENT
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: env
          - name: RUM_DEBUG
          - name: ENV_PLATFORM
            value: "aws"
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: SIGNALFX_ENDPOINT_URL
            value: "http://$(NODE_IP):9411/api/v2/spans"
          - name: SIGNALFX_SERVER_TIMING_CONTEXT
            value: "true"
          resources:
            requests:
              cpu: 130m
              memory: 164Mi
            limits:
              cpu: 150m
              memory: 200Mi
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-external
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "3"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
    external-dns.alpha.kubernetes.io/hostname: demo.
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
  - name: http
    port: 81
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
spec:
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      labels:
        app: emailservice
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: emailservice
        image: quay.io/signalfuse/microservices-demo-emailservice:a24bc7e317
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: SIGNALFX_ENDPOINT_URL
          value: "http://$(NODE_IP):9411/api/v2/spans"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        resources:
          requests:
            cpu: 110m
            memory: 90Mi
          limits:
            cpu: 130m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: emailservice
spec:
  type: ClusterIP
  selector:
    app: emailservice
  ports:
  - name: grpc
    port: 5000
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rum-loadgen-deployment
  labels:
    app: rum-loadgen
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rum-loadgen
  template:
    metadata:
      labels:
        app: rum-loadgen
    spec:
      # If you are NOT running this from AWS, but from multipass for example set the below env variable
      # set RUM_FRONTEND_IP to the IP adress where you can reach your local Online Boutique
      #env:
      #  - name: RUM_FRONTEND_IP
      #    value: "192.168.1.99"
      containers:
      - name: rum-loadgen
        #image:  quay.io/phagen/rumloadgen:5.1
        image: rcastley895/rumloadgen:5.4
        imagePullPolicy: Always
        env:
        - name: RUM_PROTOCOL
          value: "http"
        - name: RUM_PORT
          value: "81"
---
apiVersion: v1
kind: Namespace
metadata:
  name: development
  labels:
    name: development
---
apiVersion: batch/v1
kind: Job
metadata:
  name: test-job
  namespace: development
spec:
  template:
    spec:
      containers:
      - name: java-beans
        image: busybox
        command: ["/bin/sh", "-c"]
        args: ["echo 'Java Network Exception: \nAll host(s) tried for db query failed (tried: prod-db:3333) - no available connection and the queue has reached its max size 256 \nAll host(s) tried for db query failed (tried: prod-db:3333) - no available connection and the queue has reached its max size 256 \nAll host(s) tried for db query failed (tried: prod-db:3333) - no available connection and the queue has reached its max size 256 \nAll host(s) tried for db query failed (tried: prod-db:3333) - no available connection and the queue has reached its max size 256'; sleep 60; exit 1"]
      restartPolicy: Never
  backoffLimit: 1
---
apiVersion: batch/v1
kind: Job
metadata:
  name: oom-kill-job3
  namespace: development
spec:
  ttlSecondsAfterFinished: 3600
  backoffLimit: 0
  template:
    spec:
      containers:
      - args:
        - 75Mi
        - "0"
        - 30Mi
        - "80"
        - "1"
        image: us-central1-docker.pkg.dev/genuine-flight-317411/devel/memory-eater:1.0
        imagePullPolicy: Always
        name: memory-eater
        resources:
          limits:
            memory: 100Mi
          requests:
            memory: 100Mi
      restartPolicy: Never