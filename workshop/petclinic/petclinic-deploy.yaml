---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-server
  labels: 
    app.kubernetes.io/part-of: spring-petclinic
spec:
  selector:
    matchLabels:
      app: config-server
  template:
    metadata:
      labels:
        app: config-server
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - image: quay.io/phagen/spring-petclinic-config-server:0.0.2
      #- image: localhost:5000/spring-petclinic-config-server:local
        name: config-server
        imagePullPolicy: Always
        ports:
        - containerPort: 8888  
        volumeMounts:
        - name: petclinic-repo
          mountPath: /petclinic-repo
          readOnly: true
        env:
        - name: _JAVA_OPTIONS
          #value: "-Dspring.profiles.active=mysql -DGIT_REPO=~/workshop/petclinic/petclinic-repo"
          value: "-Dspring.profiles.active=native -DGIT_REPO=/petclinic-repo"
        - name: RUM_REALM
          valueFrom:
            secretKeyRef:
              name: workshop-secret
              key: realm
        - name: RUM_AUTH
          valueFrom:
            secretKeyRef:
              name: workshop-secret
              key: rum_token
        - name: RUM_APP_NAME
          valueFrom:
            secretKeyRef:
              name: workshop-secret
              key: app
        - name: RUM_ENVIRONMENT
          valueFrom:
            secretKeyRef:
              name: workshop-secret
              key: env
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: SIGNALFX_ENDPOINT_URL
          value: "http://$(NODE_IP):9411/api/v2/spans"
        - name: SIGNALFX_SERVER_TIMING_CONTEXT
          value: "true"    
        - name:  SPLUNK_METRICS_ENDPOINT
          value: "http://$(NODE_IP):9943"
        resources:
          requests:
            #cpu: 125m
            memory: 512Mi
          limits:
            #cpu: 600m
            memory: 768Mi
      volumes:
        - name: petclinic-repo
        # mount /home/ubuntu/workshop/petclinic/petclinic-repo, but only if that directory already exists
          hostPath:
            path: /home/ubuntu/workshop/petclinic/petclinic-repo # directory location on host
            type: Directory # this field is optional
---
apiVersion: v1
kind: Service
metadata:
  name: config-server
  labels: 
    app.kubernetes.io/part-of: spring-petclinic
spec:
  type: ClusterIP
  selector:
    app: config-server
  ports:
  - name: tcp
    port: 8888
    targetPort: 8888
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: discovery-server
  labels: 
    app.kubernetes.io/part-of: spring-petclinic
spec:
  selector:
    matchLabels:
      app: discovery-server
  template:
    metadata:
      labels:
        app: discovery-server
    spec:
      terminationGracePeriodSeconds: 5
      containers:
        - command:
            - ./dockerize
            - -wait=tcp://config-server:8888
            - -timeout=60s
            - --
            - java
            - org.springframework.boot.loader.JarLauncher
          image: quay.io/phagen/spring-petclinic-discovery-server:0.0.2
          name: discovery-server
          imagePullPolicy: Always
          ports:
          - containerPort: 8761  
          env: 
          - name: RUM_REALM
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: realm
          - name: RUM_AUTH
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: rum_token
          - name: RUM_APP_NAME
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: app
          - name: RUM_ENVIRONMENT
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: env
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: SIGNALFX_ENDPOINT_URL
            value: "http://$(NODE_IP):9411/api/v2/spans"
          - name: SIGNALFX_SERVER_TIMING_CONTEXT
            value: "true"
          - name:  SPLUNK_METRICS_ENDPOINT
            value: "http://$(NODE_IP):9943"   
          resources:
            requests:
              #cpu: 125m
              memory: 512Mi
            limits:
              #cpu: 600m
              memory: 768Mi
---
apiVersion: v1
kind: Service
metadata:
  name: discovery-server
  labels: 
    app.kubernetes.io/part-of: spring-petclinic
spec:
  type: ClusterIP
  selector:
    app: discovery-server
  ports:
  - name: tcp
    port: 8761
    targetPort: 8761
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  labels: 
    app.kubernetes.io/part-of: spring-petclinic
spec:
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - command:
            - ./dockerize
            - -wait=tcp://discovery-server:8761
            - -timeout=60s
            - --
            - java
            - org.springframework.boot.loader.JarLauncher
          name: api-gateway
          image: quay.io/phagen/spring-petclinic-api-gateway:0.0.2
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
          env: 
          - name: RUM_REALM
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: realm
          - name: RUM_AUTH
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: rum_token
          - name: RUM_APP_NAME
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: app
          - name: RUM_ENVIRONMENT
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: env
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: SIGNALFX_ENDPOINT_URL
            value: "http://$(NODE_IP):9411/api/v2/spans"
          - name: SIGNALFX_SERVER_TIMING_CONTEXT
            value: "true"
          - name:  SPLUNK_METRICS_ENDPOINT
            value: "http://$(NODE_IP):9943"            
          resources:
            requests:
              #cpu: 125m
              memory: 512Mi
            limits:
              #cpu: 600m
              memory: 768Mi
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  labels: 
    app.kubernetes.io/part-of: spring-petclinic
spec:
  type: ClusterIP
  selector:
    app: api-gateway
  ports:
  - name: http
    port: 82
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-external
  labels: 
    app.kubernetes.io/part-of: spring-petclinic
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "3"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
    external-dns.alpha.kubernetes.io/hostname: demo.
spec:
  type: LoadBalancer
  selector:
    app: api-gateway
  ports:
  - name: http
    port: 81
    targetPort: 8080
---    
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customers-service
  labels: 
    app.kubernetes.io/part-of: spring-petclinic
spec:
  selector:
    matchLabels:
      app: customers-service
  template:
    metadata:
      labels:
        app: customers-service
    spec:
      terminationGracePeriodSeconds: 5
      containers:
        - command:
            - ./dockerize
            - -wait=tcp://discovery-server:8761
            - -timeout=60s
            - --
            - java
            - org.springframework.boot.loader.JarLauncher
          image: quay.io/phagen/spring-petclinic-customers-service:0.0.2
          name: customers-service
          imagePullPolicy: Always
          ports:
          - containerPort: 8081
          env:  
          - name: _JAVA_OPTIONS
            value: "-Dspring.profiles.active=docker,mysql" 
          - name: RUM_REALM
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: realm
          - name: RUM_AUTH
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: rum_token
          - name: RUM_APP_NAME
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: app
          - name: RUM_ENVIRONMENT
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: env
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: SIGNALFX_ENDPOINT_URL
            value: "http://$(NODE_IP):9411/api/v2/spans"
          - name: SIGNALFX_SERVER_TIMING_CONTEXT
            value: "true"
          - name:  SPLUNK_METRICS_ENDPOINT
            value: "http://$(NODE_IP):9943"
          resources:
            requests:
              #cpu: 125m
              memory: 512Mi
            limits:
              #cpu: 600m
              memory: 768Mi
---
apiVersion: v1
kind: Service
metadata:
  name: customers-service
  labels: 
    app.kubernetes.io/part-of: spring-petclinic
spec:
  type: ClusterIP
  selector:
    app: customers-service
  ports:
  - name: tcp
    port: 8081
    targetPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vets-service
  labels: 
    app.kubernetes.io/part-of: spring-petclinic
spec:
  selector:
    matchLabels:
      app: vets-service
  template:
    metadata:
      labels:
        app: vets-service
    spec:
      terminationGracePeriodSeconds: 5
      containers:
        - command:
            - ./dockerize
            - -wait=tcp://discovery-server:8761
            - -timeout=60s
            - --
            - java
            - org.springframework.boot.loader.JarLauncher
          image: quay.io/phagen/spring-petclinic-vets-service:0.0.2
          name: vets-service
          imagePullPolicy: Always
          ports:
          - containerPort: 8083      
          env:
          - name: _JAVA_OPTIONS
            value: "-Dspring.profiles.active=docker,mysql" 
          - name: RUM_REALM
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: realm
          - name: RUM_AUTH
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: rum_token
          - name: RUM_APP_NAME
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: app
          - name: RUM_ENVIRONMENT
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: env
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: SIGNALFX_ENDPOINT_URL
            value: "http://$(NODE_IP):9411/api/v2/spans"
          - name: SIGNALFX_SERVER_TIMING_CONTEXT
            value: "true"
          - name:  SPLUNK_METRICS_ENDPOINT
            value: "http://$(NODE_IP):9943"
          resources:
            requests:
              #cpu: 125m
              memory: 512Mi
            limits:
              #cpu: 600m
              memory: 768Mi
---
apiVersion: v1
kind: Service
metadata:
  name: vets-service
  labels: 
    app.kubernetes.io/part-of: spring-petclinic
spec:
  type: ClusterIP
  selector:
    app: vets-service
  ports:
  - name: tcp
    port: 8083
    targetPort: 8083  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: visits-service
  labels: 
    app.kubernetes.io/part-of: spring-petclinic
spec:
  selector:
    matchLabels:
      app: visits-service
  template:
    metadata:
      labels:
        app: visits-service
    spec:
      terminationGracePeriodSeconds: 5
      containers:
        - command:
            - ./dockerize
            - -wait=tcp://discovery-server:8761
            - -timeout=60s
            - --
            - java
            - org.springframework.boot.loader.JarLauncher
          image: quay.io/phagen/spring-petclinic-visits-service:0.0.2
          name: visits-service
          imagePullPolicy: Always
          ports:
          - containerPort: 8082      
          env:
          - name: _JAVA_OPTIONS
            value: "-Dspring.profiles.active=docker,mysql" 
          - name: RUM_REALM
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: realm
          - name: RUM_AUTH
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: rum_token
          - name: RUM_APP_NAME
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: app
          - name: RUM_ENVIRONMENT
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: env
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: SIGNALFX_ENDPOINT_URL
            value: "http://$(NODE_IP):9411/api/v2/spans"
          - name: SIGNALFX_SERVER_TIMING_CONTEXT
            value: "true"
          - name:  SPLUNK_METRICS_ENDPOINT
            value: "http://$(NODE_IP):9943"            
          resources:
            requests:
              #cpu: 125m
              memory: 512Mi
            limits:
              #cpu: 600m
              memory: 768Mi
---
apiVersion: v1
kind: Service
metadata:
  name: visits-service
  labels: 
    app.kubernetes.io/part-of: spring-petclinic
spec:
  type: ClusterIP
  selector:
    app: visits-service
  ports:
  - name: tcp
    port: 8082
    targetPort: 8082
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-server
  labels: 
    app.kubernetes.io/part-of: spring-petclinic
spec:
  selector:
    matchLabels:
      app: admin-server
  template:
    metadata:
      labels:
        app: admin-server
    spec:
      terminationGracePeriodSeconds: 5
      containers:
        - command:
            - ./dockerize
            - -wait=tcp://discovery-server:8761
            - -timeout=60s
            - --
            - java
            - org.springframework.boot.loader.JarLauncher
          image: quay.io/phagen/spring-petclinic-admin-server:0.0.2
          name: admin-server
          imagePullPolicy: Always
          ports:
          - containerPort: 9090   
          env: 
          - name: RUM_REALM
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: realm
          - name: RUM_AUTH
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: rum_token
          - name: RUM_APP_NAME
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: app
          - name: RUM_ENVIRONMENT
            valueFrom:
              secretKeyRef:
                name: workshop-secret
                key: env
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: SIGNALFX_ENDPOINT_URL
            value: "http://$(NODE_IP):9411/api/v2/spans"
          - name: SIGNALFX_SERVER_TIMING_CONTEXT
            value: "true"
          - name:  SPLUNK_METRICS_ENDPOINT
            value: "http://$(NODE_IP):9943"
          resources:
            requests:
              #cpu: 120m
              memory: 512Mi
            limits:
              #cpu: 600m
              memory: 768Mi
---
apiVersion: v1
kind: Service
metadata:
  name: admin-server
  labels: 
    app.kubernetes.io/part-of: spring-petclinic
spec:
  type: ClusterIP
  selector:
    app: admin-server
  ports:
  - name: tcp
    port: 9090
    targetPort: 9090
---    
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: mysql:5.7
          name: mysql
          env:
            # Use secret in real usage
            - name: MYSQL_ROOT_PASSWORD
              value: petclinic
            - name: MYSQL_DATABASE
              value: "petclinic"
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-persistent-storage
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config        
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  initdb.sql: |
    CREATE DATABASE IF NOT EXISTS petclinic;
    GRANT ALL PRIVILEGES ON petclinic.* TO pcroot@localhost IDENTIFIED BY 'pc';

    USE petclinic;

    CREATE TABLE IF NOT EXISTS types (
      id INT(4) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name VARCHAR(80),
      INDEX(name)
    ) engine=InnoDB;

    CREATE TABLE IF NOT EXISTS owners (
      id INT(4) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      first_name VARCHAR(30),
      last_name VARCHAR(30),
      address VARCHAR(255),
      city VARCHAR(80),
      telephone VARCHAR(20),
      INDEX(last_name)
    ) engine=InnoDB;

    CREATE TABLE IF NOT EXISTS pets (
      id INT(4) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name VARCHAR(30),
      birth_date DATE,
      type_id INT(4) UNSIGNED NOT NULL,
      owner_id INT(4) UNSIGNED NOT NULL,
      INDEX(name),
      FOREIGN KEY (owner_id) REFERENCES owners(id),
      FOREIGN KEY (type_id) REFERENCES types(id)
    ) engine=InnoDB;

    CREATE TABLE IF NOT EXISTS vets (
      id INT(4) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      first_name VARCHAR(30),
      last_name VARCHAR(30),
      INDEX(last_name)
    ) engine=InnoDB;

    CREATE TABLE IF NOT EXISTS specialties (
      id INT(4) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      name VARCHAR(80),
      INDEX(name)
    ) engine=InnoDB;

    CREATE TABLE IF NOT EXISTS vet_specialties (
      vet_id INT(4) UNSIGNED NOT NULL,
      specialty_id INT(4) UNSIGNED NOT NULL,
      FOREIGN KEY (vet_id) REFERENCES vets(id),
      FOREIGN KEY (specialty_id) REFERENCES specialties(id),
      UNIQUE (vet_id,specialty_id)
    ) engine=InnoDB;

    CREATE TABLE IF NOT EXISTS visits (
      id INT(4) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
      pet_id INT(4) UNSIGNED NOT NULL,
      visit_date DATE,
      description VARCHAR(8192),
      FOREIGN KEY (pet_id) REFERENCES pets(id)
    ) engine=InnoDB;

    INSERT IGNORE INTO types VALUES (1, 'cat');
    INSERT IGNORE INTO types VALUES (2, 'dog');
    INSERT IGNORE INTO types VALUES (3, 'lizard');
    INSERT IGNORE INTO types VALUES (4, 'snake');
    INSERT IGNORE INTO types VALUES (5, 'bird');
    INSERT IGNORE INTO types VALUES (6, 'hamster');

    INSERT IGNORE INTO owners VALUES (1, 'George', 'Franklin', '110 W. Liberty St.', 'Madison', '6085551023');
    INSERT IGNORE INTO owners VALUES (2, 'Betty', 'Davis', '638 Cardinal Ave.', 'Sun Prairie', '6085551749');
    INSERT IGNORE INTO owners VALUES (3, 'Eduardo', 'Rodriquez', '2693 Commerce St.', 'McFarland', '6085558763');
    INSERT IGNORE INTO owners VALUES (4, 'Harold', 'Davis', '563 Friendly St.', 'Windsor', '6085553198');
    INSERT IGNORE INTO owners VALUES (5, 'Peter', 'McTavish', '2387 S. Fair Way', 'Madison', '6085552765');
    INSERT IGNORE INTO owners VALUES (6, 'Jean', 'Coleman', '105 N. Lake St.', 'Monona', '6085552654');
    INSERT IGNORE INTO owners VALUES (7, 'Jeff', 'Black', '1450 Oak Blvd.', 'Monona', '6085555387');
    INSERT IGNORE INTO owners VALUES (8, 'Maria', 'Escobito', '345 Maple St.', 'Madison', '6085557683');
    INSERT IGNORE INTO owners VALUES (9, 'David', 'Schroeder', '2749 Blackhawk Trail', 'Madison', '6085559435');
    INSERT IGNORE INTO owners VALUES (10, 'Carlos', 'Estaban', '2335 Independence La.', 'Waunakee', '6085555487');

    INSERT IGNORE INTO pets VALUES (1, 'Leo', '2000-09-07', 1, 1);
    INSERT IGNORE INTO pets VALUES (2, 'Basil', '2002-08-06', 6, 2);
    INSERT IGNORE INTO pets VALUES (3, 'Rosy', '2001-04-17', 2, 3);
    INSERT IGNORE INTO pets VALUES (4, 'Jewel', '2000-03-07', 2, 3);
    INSERT IGNORE INTO pets VALUES (5, 'Iggy', '2000-11-30', 3, 4);
    INSERT IGNORE INTO pets VALUES (6, 'George', '2000-01-20', 4, 5);
    INSERT IGNORE INTO pets VALUES (7, 'Samantha', '1995-09-04', 1, 6);
    INSERT IGNORE INTO pets VALUES (8, 'Max', '1995-09-04', 1, 6);
    INSERT IGNORE INTO pets VALUES (9, 'Lucky', '1999-08-06', 5, 7);
    INSERT IGNORE INTO pets VALUES (10, 'Mulligan', '1997-02-24', 2, 8);
    INSERT IGNORE INTO pets VALUES (11, 'Freddy', '2000-03-09', 5, 9);
    INSERT IGNORE INTO pets VALUES (12, 'Lucky', '2000-06-24', 2, 10);
    INSERT IGNORE INTO pets VALUES (13, 'Sly', '2002-06-08', 1, 10);

    INSERT IGNORE INTO vets VALUES (1, 'James', 'Carter');
    INSERT IGNORE INTO vets VALUES (2, 'Helen', 'Leary');
    INSERT IGNORE INTO vets VALUES (3, 'Linda', 'Douglas');
    INSERT IGNORE INTO vets VALUES (4, 'Rafael', 'Ortega');
    INSERT IGNORE INTO vets VALUES (5, 'Henry', 'Stevens');
    INSERT IGNORE INTO vets VALUES (6, 'Sharon', 'Jenkins');

    INSERT IGNORE INTO specialties VALUES (1, 'radiology');
    INSERT IGNORE INTO specialties VALUES (2, 'surgery');
    INSERT IGNORE INTO specialties VALUES (3, 'dentistry');

    INSERT IGNORE INTO vet_specialties VALUES (2, 1);
    INSERT IGNORE INTO vet_specialties VALUES (3, 2);
    INSERT IGNORE INTO vet_specialties VALUES (3, 3);
    INSERT IGNORE INTO vet_specialties VALUES (4, 2);
    INSERT IGNORE INTO vet_specialties VALUES (5, 1);

    INSERT IGNORE INTO visits VALUES (1, 7, '2010-03-04', 'rabies shot');
    INSERT IGNORE INTO visits VALUES (2, 8, '2011-03-04', 'rabies shot');
    INSERT IGNORE INTO visits VALUES (3, 8, '2009-06-04', 'neutered');
    INSERT IGNORE INTO visits VALUES (4, 7, '2008-09-04', 'spayed');
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-datastore
spec:
  type: ClusterIP
  selector:
    app: mysql-datastore
  ports:
  - name: mysql
    port: 3306
    targetPort: 3306
---