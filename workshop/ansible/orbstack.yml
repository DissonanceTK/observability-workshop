---
- hosts: localhost
  gather_facts: false

  pre_tasks:
    - name: Set the required variables
      set_fact:
        ingest_token: "{{ lookup('env','ACCESS_TOKEN') }}"
        rum_token: "{{ lookup('env','RUM_TOKEN') }}"
        realm: "{{ lookup('env','REALM') }}"
        instance: "{{ lookup('env','INSTANCE') }}"
        hec_url: "{{ lookup('env','HEC_URL') }}"
        hec_token: "{{ lookup('env','HEC_TOKEN') }}"

  tasks:
    - name: Configure Orbstack
      block:
      - name: Check to see if the config has run
        stat:
          path: /blue_rabbit.followed
        register: wh_result

      - name: Add environment variables to .profile
        ansible.builtin.blockinfile:
          path: /etc/skel/.profile
          block: |
            export REALM={{ realm }}
            export ACCESS_TOKEN={{ ingest_token }}
            export RUM_TOKEN={{ rum_token }}
            export HEC_TOKEN={{ hec_token }}
            export HEC_URL={{ hec_url }}
            export INSTANCE={{ instance }}
        become: true
        when: not wh_result.stat.exists

      - name: Create K8s secrets YAML
        file:
          path: /home/splunk/workshop-secrets.yaml
          owner: splunk
          group: splunk
          state: touch
        become: true
        when: not wh_result.stat.exists

      - name: Update secrets YAML
        ansible.builtin.blockinfile:
          path: /home/splunk/workshop-secrets.yaml
          block: |
            apiVersion: v1
            kind: Secret
            metadata:
              name: workshop-secret
              namespace: default
            type: Opaque
            stringData:
              app: {{ instance }}-store
              deployment: "deployment.environment={{ instance }}"
              env: {{ instance }}
              realm: {{ realm }}
              access_token: {{ ingest_token }}
              rum_token: {{ rum_token }}
              hec_token: {{ hec_token }}
              hec_url: {{ hec_url }}
        become: true
        when: not wh_result.stat.exists

      - name: Apply secrets YAML
        command: kubectl apply -f workshop-secrets.yaml
        when: not wh_result.stat.exists

      - name: Create a file to signify that the config has run successfully
        file:
          path: "/blue_rabbit.followed"
          state: touch
        become: true
        when: not wh_result.stat.exists