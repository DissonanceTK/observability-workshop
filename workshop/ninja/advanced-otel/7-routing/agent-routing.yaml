extensions:
  file_storage/checkpoint:
    directory: ./checkpoint-folder
    create_directory: true
    timeout: 1s
    compaction:
        on_start: true
        directory: ./checkpoint-folder
        max_transaction_size: 65_536

receivers:
    otlp:
      protocols:
        http:
          endpoint: "0.0.0.0:4318"
        #filelog:  
        #  include: [ /output/file.log ]
        #  storage: file_storage/checkpoint      

exporters:
    debug:
        verbosity: detailed
    file/a:
      path: ./agent-A.out 
      rotation:
        max_megabytes: 2  
        max_backups: 2
    file/b:
      path: ./agent-B.out 
      rotation:
        max_megabytes: 2  
        max_backups: 2    
    
    otlp/gateway:
      endpoint: "localhost:5317"
      tls:
        insecure: true
      retry_on_failure:
        enabled: true
      #    initial_interval: 1s
      #    max_interval: 5s
      #    max_elapsed_time: 20s
      sending_queue:
        enabled: true    
        num_consumers: 10
        queue_size: 10000
        storage: file_storage/checkpoint

      timeout: 5s
      headers:
       X-SF-Token: "123456"

connectors:
 routing:
    default_pipelines: [traces/alpha]
    error_mode: ignore
    match_once: true
    table:
      - statement: route() where attributes["security"] == "unknown"
        pipelines: [traces/beta]
#      - statement: delete_key(attributes, "X-Tenant") where IsMatch(attributes["X-Tenant"], ".*corp")
#        pipelines: [traces/jaeger-ecorp]

processors:
  batch:
    metadata_keys:
      - X-SF-Token
  memory_limiter:
    check_interval: 2s
    limit_mib: 512
  
  resourcedetection:
    detectors: [system]
    override: true
  
  resource/add_mode:
    attributes:
      - action: insert
        value: "agent"
        key: otelcol.service.mode

service:
    extensions: [file_storage/checkpoint]
    pipelines:
        traces:
            receivers: [otlp]
            exporters: [routing, debug]
        traces/alpha:
            receivers: [routing]    
            processors:
            - memory_limiter
            - batch
            - resourcedetection
            - resource/add_mode
            exporters: [file/a]
        traces/beta:
            receivers: [routing]    
            processors:
            - memory_limiter
            - batch
            - resourcedetection
            - resource/add_mode
            exporters: [file/b]            
        metrics:
            receivers: [otlp]
            processors: 
            - memory_limiter
            - batch
            - resourcedetection
            exporters: [ file/a, debug]
        logs:
            receivers: [otlp]
            processors:
            - memory_limiter
            - batch
            - resourcedetection
            exporters: [ file/a, debug]