extensions:
  file_storage/checkpoint:
    directory: ./checkpoint-folder
    create_directory: true
    timeout: 1s
    compaction:
        on_start: true
        directory: ./checkpoint-folder
        max_transaction_size: 65_536

receivers:
    otlp:
      protocols:
        http:
          endpoint: "0.0.0.0:4318"
        #filelog:  
        #  include: [ /output/file.log ]
        #  storage: file_storage/checkpoint      

exporters:
    debug:
        verbosity: detailed
    file:
      path: ./agent.out 
      rotation:
        max_megabytes: 2  
        max_backups: 2
    
    otlp/gateway:
      endpoint: "localhost:5317"
      tls:
        insecure: true
      retry_on_failure:
        enabled: true
      #    initial_interval: 1s
      #    max_interval: 5s
      #    max_elapsed_time: 20s
      sending_queue:
        enabled: true    
        num_consumers: 10
        queue_size: 10000
        storage: file_storage/checkpoint

      timeout: 5s
      headers:
       X-SF-Token: "123456"

processors:
  batch:
    metadata_keys:
      - X-SF-Token
  memory_limiter:
    check_interval: 2s
    limit_mib: 512
  
  resourcedetection:
    detectors: [system]
    override: true
  
  resource/add_mode:
    attributes:
      - action: insert
        value: "agent"
        key: otelcol.service.mode
  
  transform/update:
    error_mode: ignore
    trace_statements:
      - context: resource
        statements:
          # Only keep the following keys
          - keep_keys(attributes, ["service.name", "service.namespace", "cloud.region", "process.command_line"])
          - limit(attributes, 100, [])
          - truncate_all(attributes, 4096)
      - context: span
        statements:
          - limit(attributes, 100, [])
          - truncate_all(attributes, 4096)
    metric_statements:
      - context: metric
        statements:
          - set(description, "Sum") where type == "Sum"
      - context: datapoint
        statements:
          - convert_sum_to_gauge() where metric.name == "system.processes.count"
          - convert_gauge_to_sum("cumulative", false) where metric.name == "prometheus_metric"

service:
    extensions: [file_storage/checkpoint]
    pipelines:
        traces:
            receivers: [otlp]
            processors:
            - memory_limiter
            - batch
            - resourcedetection
            - resource/add_mode
            - transform/update
            exporters: [otlp/gateway, debug]
        metrics:
            receivers: [otlp]
            processors: 
            - memory_limiter
            - batch
            - resourcedetection
            exporters: [ otlp/gateway, debug]
        logs:
            receivers: [otlp]
            processors:
            - memory_limiter
            - batch
            - resourcedetection
            exporters: [ otlp/gateway, debug]